{"version":3,"sources":["../../src/utils/api-runner-node.js"],"names":["Promise","require","glob","_","tracer","globalTracer","reporter","cache","apiList","createNodeId","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","runAPI","gatsbyNode","resolve","spanOptions","pluginSpan","setTag","pathPrefix","store","emitter","loadNodeContent","getNodes","getNode","hasNodeChanged","getNodeAndSavePathDependency","getState","program","prefixPaths","config","namespacedCreateNodeId","id","tracing","apiCallArgs","actions","pluginOptions","fromCallback","callback","cb","err","val","finish","result","filteredPlugins","hasAPIFile","sync","apisRunningById","Map","apisRunningByTraceId","waitingForCasacadeToFinish","module","exports","pluginSource","apiSpanArgs","apiSpan","forEach","traceTags","value","error","process","exit","plugins","flattenedPlugins","filter","noSourcePluginPlugins","p","apiRunInstance","span","startTime","Date","toJSON","type","node","internal","contentDigest","filename","page","path","JSON","stringify","waitForCascadingActions","push","set","has","currentCount","get","pluginName","mapSeries","catch","env","NODE_ENV","panic","then","results","delete","size","emit","isEmpty","instance","apisByTraceIdCount"],"mappings":"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","sourcesContent":["const Promise = require(`bluebird`)\nconst glob = require(`glob`)\nconst _ = require(`lodash`)\n\nconst tracer = require(`opentracing`).globalTracer()\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst cache = require(`./cache`)\nconst apiList = require(`./api-node-docs`)\nconst createNodeId = require(`./create-node-id`)\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId } = actionOptions\n  if (boundPluginActionCreators[plugin.name + api + traceId]) {\n    return boundPluginActionCreators[plugin.name + api + traceId]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          if (args.length === 1) {\n            boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            boundActionCreator(args[0], args[1], actionOptions)\n          }\n        }\n      }\n    }\n    boundPluginActionCreators[\n      plugin.name + api + traceId\n    ] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst runAPI = (plugin, api, args) => {\n  const gatsbyNode = require(`${plugin.resolve}/gatsby-node`)\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n\n    let pathPrefix = ``\n    const {\n      store,\n      emitter,\n      loadNodeContent,\n      getNodes,\n      getNode,\n      hasNodeChanged,\n      getNodeAndSavePathDependency,\n    } = require(`../redux`)\n    const { boundActionCreators } = require(`../redux/actions`)\n\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan }\n    )\n\n    if (store.getState().program.prefixPaths) {\n      pathPrefix = store.getState().config.pathPrefix\n    }\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    const apiCallArgs = [\n      {\n        ...args,\n        pathPrefix,\n        boundActionCreators: doubleBoundActionCreators,\n        actions: doubleBoundActionCreators,\n        loadNodeContent,\n        store,\n        emitter,\n        getNodes,\n        getNode,\n        hasNodeChanged,\n        reporter,\n        getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        tracing,\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return Promise.fromCallback(callback => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          callback(err, val)\n        }\n        gatsbyNode[api](...apiCallArgs, cb)\n      })\n    } else {\n      const result = gatsbyNode[api](...apiCallArgs)\n      pluginSpan.finish()\n      return Promise.resolve(result)\n    }\n  }\n\n  return null\n}\n\nlet filteredPlugins\nconst hasAPIFile = plugin => glob.sync(`${plugin.resolve}/gatsby-node*`)[0]\n\nlet apisRunningById = new Map()\nlet apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\nmodule.exports = async (api, args = {}, pluginSource) =>\n  new Promise(resolve => {\n    const { parentSpan } = args\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n    apiSpan.setTag(`api`, api)\n    _.forEach(args.traceTags, (value, key) => {\n      apiSpan.setTag(key, value)\n    })\n\n    // Check that the API is documented.\n    if (!apiList[api]) {\n      reporter.error(`api: \"${api}\" is not a valid Gatsby api`)\n      process.exit()\n    }\n\n    const { store } = require(`../redux`)\n    const plugins = store.getState().flattenedPlugins\n    // Get the list of plugins that implement gatsby-node\n    if (!filteredPlugins) {\n      filteredPlugins = plugins.filter(plugin => hasAPIFile(plugin))\n    }\n\n    // Break infinite loops.\n    // Sometimes a plugin will implement an API and call an\n    // action which will trigger the same API being called.\n    // \"onCreatePage\" is the only example right now.\n    // In these cases, we should avoid calling the originating plugin\n    // again.\n    let noSourcePluginPlugins = filteredPlugins\n    if (pluginSource) {\n      noSourcePluginPlugins = filteredPlugins.filter(\n        p => p.name !== pluginSource\n      )\n    }\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId: args.traceId,\n    }\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${args.traceId}`\n    } else if (api === `onCreateNode`) {\n      id = `${api}${apiRunInstance.startTime}${\n        args.node.internal.contentDigest\n      }${args.traceId}`\n    } else if (api === `preprocessSource`) {\n      id = `${api}${apiRunInstance.startTime}${args.filename}${args.traceId}`\n    } else if (api === `onCreatePage`) {\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${args.traceId}`\n    } else {\n      id = `${api}|${apiRunInstance.startTime}|${\n        apiRunInstance.traceId\n      }|${JSON.stringify(args)}`\n    }\n    apiRunInstance.id = id\n\n    if (args.waitForCascadingActions) {\n      waitingForCasacadeToFinish.push(apiRunInstance)\n    }\n\n    apisRunningById.set(apiRunInstance.id, apiRunInstance)\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n    }\n\n    let pluginName = null\n\n    Promise.mapSeries(noSourcePluginPlugins, plugin => {\n      if (plugin.name === `default-site-plugin`) {\n        pluginName = `gatsby-node.js`\n      } else {\n        pluginName = `Plugin ${plugin.name}`\n      }\n      return Promise.resolve(\n        runAPI(plugin, api, { ...args, parentSpan: apiSpan })\n      )\n    })\n      .catch(err => {\n        if (err) {\n          if (process.env.NODE_ENV === `production`) {\n            return reporter.panic(`${pluginName} returned an error`, err)\n          }\n          return reporter.error(`${pluginName} returned an error`, err)\n        }\n        return null\n      })\n      .then(results => {\n        // Remove runner instance\n        apisRunningById.delete(apiRunInstance.id)\n        const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n        apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n        if (apisRunningById.size === 0) {\n          const { emitter } = require(`../redux`)\n          emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n        }\n\n        // Filter empty results\n        apiRunInstance.results = results.filter(result => !_.isEmpty(result))\n\n        // Filter out empty responses and return if the\n        // api caller isn't waiting for cascading actions to finish.\n        if (!args.waitForCascadingActions) {\n          apiSpan.finish()\n          resolve(apiRunInstance.results)\n        }\n\n        // Check if any of our waiters are done.\n        waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n          instance => {\n            // If none of its trace IDs are running, it's done.\n            const apisByTraceIdCount = apisRunningByTraceId.get(\n              instance.traceId\n            )\n            if (apisByTraceIdCount === 0) {\n              instance.span.finish()\n              instance.resolve(instance.results)\n              return false\n            } else {\n              return true\n            }\n          }\n        )\n        return\n      })\n  })\n"],"file":"api-runner-node.js"}